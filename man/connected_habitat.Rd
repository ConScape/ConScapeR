% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gridrsp.R
\name{connected_habitat}
\alias{connected_habitat}
\title{Wrapper for the \code{connected_habitat} function of \code{ConScape}}
\usage{
connected_habitat(h, alpha)
}
\arguments{
\item{h}{\verb{[GridRSP]} The output from the \code{ConScapeR::GridRSP} function}

\item{alpha}{\verb{[numeric]} The distance scaling for the exponential distance to proximity transformation}
}
\description{
Computes the habitat functionality for a ConScape.GridRSP object.
See Van Moorter et al. (2023, Methods in Ecology and Evolution) for more details.
}
\examples{
library(ConScapeR)
library(terra)

# Launch Julia
ConScapeR_setup(Sys.getenv("JULIA_PATH"))

# Create a SpatRaster from a file for the landscape permeability or affinities and habitat suitability
aff <- terra::rast(system.file("data/affinities_2000.asc", package="ConScapeR"))
hab <- terra::rast(system.file("data/suitability_2000.asc", package="ConScapeR"))

# Create a ConScape Grid
g <- ConScapeR::Grid(affinities=aff, sources=hab, targets=hab, costs="x -> -log(x)")

# Create a ConScape GridRSP by providing the randomness parameter theta
# note: on larger graphs this may be a computation intensive step
h <- ConScapeR::GridRSP(g, theta=0.1)

# Compute habitat functionality
func <- ConScapeR::connected_habitat(h, alpha=1/100)

# Convert matrix to raster
func <- ConScapeR::mat2rast(func)
plot(func)
}
